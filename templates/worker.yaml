{{range $i, $e := until ( int .Values.workerNodeCount )}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rajds-worker-{{ $i }}
  namespace: {{ $.Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: rajds-worker-{{ $i }}
  template:
    metadata:
      labels:
        app: rajds-worker-{{ $i }}
        prom: rajds-worker
      namespace: {{ $.Release.Namespace }}
    spec:
      containers:
        - name: worker
          command:
            - /app/worker
          envFrom:
            - configMapRef:
              name: rajds-config
              optional: false
          image: {{ $.Values.image }}
          imagePullPolicy: Always
          securityContext:
            allowPrivilegeEscalation: true
            privileged: true
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          ports:
            - name: http
              containerPort: 30001
              protocol: TCP
            - name: grpc
              containerPort: 31236
              protocol: TCP
            - name: worker-receiver
              containerPort: 31237
              protocol: TCP
          volumeMounts:
            - mountPath: /app/.rajds/
              name: rajds-volume
              subPath: worker-{{ $i }}/
            - mountPath: /app/.rajds/ca/
              name: rajds-volume
              subPath: control-plane/ca/
              readOnly: true
      volumes:
        - configMap:
            defaultMode: 420
            name: rajds-config
            name: rajds-config
        - name: rajds-volume
          persistentVolumeClaim:
            claimName: rajds-storage
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 1
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
{{end}}